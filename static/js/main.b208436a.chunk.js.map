{"version":3,"sources":["components/Navbar.js","components/SectionTable.js","components/Section.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","appBar","position","layout","Object","defineProperty","width","marginLeft","spacing","unit","marginRight","breakpoints","up","props","classes","react_default","a","createElement","Fragment","CssBaseline_default","AppBar_default","className","Toolbar_default","Typography_default","variant","color","noWrap","id","name","highScore","currentScore","rows","root","marginTop","overflowX","table","minWidth","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","map","row","key","component","scope","cards","icon","heroUnit","backgroundColor","palette","background","paper","heroContent","maxWidth","margin","padding","concat","heroButtons","cardGrid","card","height","display","flexDirection","cardMedia","paddingTop","cardContent","flexGrow","footer","components_SectionTable","classNames","Grid_default","container","item","sm","md","lg","Card_default","CardMedia_default","image","title","gutterBottom","App","components_Navbar","components_Section","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b208436a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 1100,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  }\r\n});\r\n\r\nfunction Navbar(props) {\r\n\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar position=\"static\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n            Welcome to the Gopher Guesser\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Navbar);","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = theme => ({\r\n\troot: {\r\n\t\twidth: '100%',\r\n\t\tmarginTop: theme.spacing.unit * 3,\r\n\t\toverflowX: 'auto',\r\n\t},\r\n\ttable: {\r\n\t\tminWidth: 700,\r\n\t},\r\n});\r\n\r\nlet id = 0;\r\nfunction createData(name, highScore, currentScore) {\r\n\tid += 1;\r\n\treturn { id, name, highScore, currentScore };\r\n}\r\n\r\nconst rows = [\r\n\tcreateData('', 0, 0),\r\n];\r\n\r\nfunction SectionTable(props) {\r\n\tconst { classes } = props;\r\n\r\n\treturn (\r\n\t\t<Paper className={classes.root}>\r\n\t\t\t<Table className={classes.table}>\r\n\t\t\t\t<TableHead>\r\n\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t<TableCell>Score: </TableCell>\r\n\t\t\t\t\t\t<TableCell align=\"right\">High Score</TableCell>\r\n\t\t\t\t\t\t<TableCell align=\"right\">Current Score</TableCell>\r\n\t\t\t\t\t</TableRow>\r\n\t\t\t\t</TableHead>\r\n\t\t\t\t<TableBody>\r\n\t\t\t\t\t{rows.map(row => (\r\n\t\t\t\t\t\t<TableRow key={row.id}>\r\n\t\t\t\t\t\t\t<TableCell component=\"th\" scope=\"row\">\r\n\t\t\t\t\t\t\t\t{row.name}\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align=\"right\">{row.highScore}</TableCell>\r\n\t\t\t\t\t\t\t<TableCell align=\"right\">{row.currentScore}</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</TableBody>\r\n\t\t\t</Table>\r\n\t\t</Paper>\r\n\t);\r\n}\r\n\r\nSectionTable.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SectionTable);\r\n","import React from \"react\"\r\n\r\nimport PropTypes from \"prop-types\"\r\nimport classNames from \"classnames\"\r\nimport Card from \"@material-ui/core/Card\"\r\nimport CardActions from \"@material-ui/core/CardActions\"\r\nimport CardContent from \"@material-ui/core/CardContent\"\r\nimport CardMedia from \"@material-ui/core/CardMedia\"\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\n\r\nimport SectionTable from \"./SectionTable\"\r\n\r\nconst styles = theme => ({\r\n\tappBar: {\r\n\t\tposition: \"relative\"\r\n\t},\r\n\ticon: {\r\n\t\tmarginRight: theme.spacing.unit * 2\r\n\t},\r\n\theroUnit: {\r\n\t\tbackgroundColor: theme.palette.background.paper\r\n\t},\r\n\theroContent: {\r\n\t\tmaxWidth: 600,\r\n\t\tmargin: \"0 auto\",\r\n\t\tpadding: `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 6}px`\r\n\t},\r\n\theroButtons: {\r\n\t\tmarginTop: theme.spacing.unit * 4\r\n\t},\r\n\tlayout: {\r\n\t\twidth: \"auto\",\r\n\t\tmarginLeft: theme.spacing.unit * 3,\r\n\t\tmarginRight: theme.spacing.unit * 3,\r\n\t\t[theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\r\n\t\t\twidth: 1100,\r\n\t\t\tmarginLeft: \"auto\",\r\n\t\t\tmarginRight: \"auto\"\r\n\t\t}\r\n\t},\r\n\tcardGrid: {\r\n\t\tpadding: `${theme.spacing.unit * 8}px 0`\r\n\t},\r\n\tcard: {\r\n\t\theight: \"100%\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\"\r\n\t},\r\n\tcardMedia: {\r\n\t\tpaddingTop: \"56.25%\" // 16:9\r\n\t},\r\n\tcardContent: {\r\n\t\tflexGrow: 1\r\n\t},\r\n\tfooter: {\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\tpadding: theme.spacing.unit * 6\r\n\t}\r\n})\r\n\r\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\r\nlet score = 0\r\n\r\n// function handleClick() {\r\n// \tscore++\r\n\r\n// \t// Refresh\r\n// \tcards.sort(() => Math.random() - 0.5)\r\n// }\r\n\r\nfunction Section(props) {\r\n\tconst { classes } = props\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<main>\r\n\t\t\t\t{/* Hero unit */}\r\n\t\t\t\t<div className={classes.heroUnit}>\r\n\t\t\t\t\t<div className={classes.heroContent}>\r\n\t\t\t\t\t\t<SectionTable />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classNames(classes.layout, classes.cardGrid)}>\r\n\t\t\t\t\t{/* End hero unit */}\r\n\t\t\t\t\t<Grid container spacing={40}>\r\n\t\t\t\t\t\t{cards.map(card => (\r\n\t\t\t\t\t\t\t<Grid item key={card} sm={6} md={4} lg={3}>\r\n\t\t\t\t\t\t\t\t<Card className={classes.card}>\r\n\t\t\t\t\t\t\t\t\t{/* <CardActionArea> */}\r\n\t\t\t\t\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\t\t\t\t\tcomponent='img'\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.cardMedia}\r\n\t\t\t\t\t\t\t\t\t\timage={\"../Images/gophers/\" + card + \".png\"}\r\n\t\t\t\t\t\t\t\t\t\ttitle={\"Gopher \" + card}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{/* </CardActionArea> */}\r\n\t\t\t\t\t\t\t\t\t{/* <CardActions>\r\n\t\t\t\t\t\t\t\t\t\t<button onClick={this.handleClick} />\r\n\t\t\t\t\t\t\t\t\t</CardActions> */}\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t\t{/* Footer */}\r\n\t\t\t<footer className={classes.footer}>\r\n\t\t\t\t<Typography variant='h6' align='center' gutterBottom>\r\n\t\t\t\t\tFooter\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography variant='subtitle1' align='center' color='textSecondary' component='p'>\r\n\t\t\t\t\tSomething here to give the footer a purpose!\r\n\t\t\t\t</Typography>\r\n\t\t\t</footer>\r\n\t\t\t{/* End footer */}\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nSection.propTypes = {\r\n\tclasses: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Section)\r\n","import React from \"react\"\nimport \"./styles/App.css\"\nimport Navbar from \"./components/Navbar\"\nimport Section from \"./components/Section\"\n\nfunction App() {\n\treturn (\n\t\t<div>\n\t\t\t<Navbar />\n\t\t\t<Section />\n\t\t\t{/* <Footer /> */}\n\t\t</div>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}